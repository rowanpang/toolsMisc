#!/bin/sh
# Wrapper script for use of the tsocks(8) transparent socksification library
#
# There are three forms of usage for this script:
#
# /usr/bin/tsocks program [program arguments...]
#
# This form sets the users LD_PRELOAD environment variable so that tsocks(8) 
# will be loaded to socksify the application then executes the specified 
# program (with the provided arguments). The following simple example might 
# be used to telnet to www.foo.org via a tsocks.conf(5) configured socks server:
#
# /usr/bin/tsocks telnet www.foo.org
#
# The second form allows for tsocks(8) to be switched on and off for a 
# session (that is, it adds and removes tsocks from the LD_PRELOAD environment
# variable). This form must be _sourced_ into the user's existing session
# (and will only work with bourne shell users):
#
# . /usr/bin/tsocks on
# telnet www.foo.org 
# . /usr/bin/tsocks off
# 
# Or
# 
# source /usr/bin/tsocks on
# telnet www.foo.org
# source /usr/bin/tsocks off
#
# The third form creates a new shell with LD_PRELOAD set and is achieved
# simply by running the script with no arguments 
# 
# /usr/bin/tsocks
#
# When finished the user can simply terminate the shell with 'exit'
# 
# This script is originally from the debian tsocks package by 
# Tamas Szerb <toma@rulez.org>
function Usage(){
    echo -e '\t\t-d: enable debug'
    echo -e '\t\t-s: proxy server'
    echo -e '\t\t-p: proxy port'
}
debug='no'
debuglevel=-1	    #MSGNONE
suffix=""
confTmp="$HOME/.tsocks/conf"
conf="$confTmp"

while [ $# -gt 0 ];do
    case $1 in
	'-d')
	    debug='yes'
	    debugfile=`mktemp tsockslog-XXXXXX.log`
	    debuglevel=2	    #MSGDEBUG
	    ;;
	'-s')
	    sip=$2
	    shift
	    suffix="$suffix.s.$sip"
	    ;;
	'-p')
	    sport=$2
	    shift
	    suffix="$suffix.p.$sport"
	    ;;
	   *)
	    break
	    ;;
    esac
    shift
done

if [ "X$suffix" != "X" ];then
    conf="$HOME/.tsocks/conf$suffix"
    [ -e $conf ] || cp $confTmp $conf

    if [ $sip ];then
	osvr=`sed -n '/^server = /p' $confTmp`
	shopt -s extglob
	tsvr=${osvr%.+([0-9])}.$sip
	shopt -u extglob
	sed -i "s;\(^server = \)[1-9].*\+;$tsvr;" $conf
    fi

    [ $sport ] && sed -i "s;\(server_port = \)[0-9]\+$;\1$sport;" $conf

fi

export TSOCKS_CONF_FILE=$conf

case "$1" in
	on)
		if [ -z "$LD_PRELOAD" ]
			then
				export LD_PRELOAD="libtsocks.so"
			else
				echo $LD_PRELOAD | grep -q "libtsocks\.so" || \
				export LD_PRELOAD="libtsocks.so $LD_PRELOAD"
		fi

		export TSOCKS_DEBUG=$debuglevel
		if [ "$debug" == 'yes' ];then
		    export TSOCKS_DEBUG_FILE=$debugfile
		fi
	;;
	off)
		export LD_PRELOAD=`echo -n $LD_PRELOAD | sed 's/libtsocks.so \?//'`
		if [ -z "$LD_PRELOAD" ]
			then
				unset LD_PRELOAD
		fi

		unset TSOCKS_DEBUG
		if [ "$debug" == 'yes' ];then
		    unset TSOCKS_DEBUG_FILE
		fi
	;;
	show|sh)
		echo "LD_PRELOAD=\"$LD_PRELOAD\""
		echo "TSOCKS_DEBUG=\"$TSOCKS_DEBUG\""
		echo "TSOCKS_DEBUG_FILE=\"$TSOCKS_DEBUG_FILE\""
	;;
	-h|-?)
	    echo "$0: Please see tsocks(1) or read comment at top of $0"
	    Usage
	    ;;
	*)
		if [ -z "$LD_PRELOAD" ]
		then
			export LD_PRELOAD="libtsocks.so"
		else
			echo $LD_PRELOAD | grep -q "libtsocks\.so" || \
			export LD_PRELOAD="libtsocks.so $LD_PRELOAD"
		fi

		export TSOCKS_DEBUG=$debuglevel
		if [ "$debug" == 'yes' ];then
		    export TSOCKS_DEBUG_FILE=$debugfile
		fi

		if [ $# = 0 ]
		then
		    env PS1="[TOSCKS:\u \W]\$ " ${SHELL:-/bin/sh} 
		fi

		if [ $# -gt 0 ]
		then
			exec "$@"
		fi
	;;
esac

#EOF
